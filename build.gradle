/*
 * Copyright 2018 Fairtide Pte. Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'java'
}
apply plugin: 'java'

group 'co.fairtide'
version '1.0-SNAPSHOT'

//sourceCompatibility = 13

repositories {
    mavenCentral()
}

configurations {
    aerprom
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    implementation group: 'io.aeron', name: 'aeron-driver', version: '1.41.4'
    implementation group: 'io.aeron', name: 'aeron-archive', version: '1.41.4'
    implementation group: 'io.prometheus', name: 'simpleclient', version: '0.16.0'
    implementation group: 'io.prometheus', name: 'simpleclient_hotspot', version: '0.16.0'
    implementation group: 'io.prometheus', name: 'simpleclient_httpserver', version: '0.16.0'
    implementation group: 'commons-cli', name: 'commons-cli', version: '1.4'
    aerprom group: 'io.aeron', name: 'aeron-driver', version: '1.41.4'
    aerprom group: 'io.aeron', name: 'aeron-archive', version: '1.41.4'
    aerprom group: 'io.prometheus', name: 'simpleclient', version: '0.16.0'
    aerprom group: 'io.prometheus', name: 'simpleclient_hotspot', version: '0.16.0'
    aerprom group: 'io.prometheus', name: 'simpleclient_httpserver', version: '0.16.0'
    aerprom group: 'commons-cli', name: 'commons-cli', version: '1.4'
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Prometheus Aeron Stat',
                'Implementation-Version': version,
                'Main-Class': 'co.fairtide.prometheus_aeron_stat.PrometheusAeronStat'
    }
    archivesBaseName = project.name + '-all'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

final String LINE_BREAK = System.getProperty("line.separator")

task copyExternalLibrariesTask(type: Copy) {
    def extLibFile = new File("${rootProject.projectDir}${File.separator}external-libraries")
    def externalLibraries = new FileTreeBuilder(extLibFile)
    def versions = new StringBuilder()
    project.logger.lifecycle("${rootProject.projectDir}${File.separator}external-libraries")
    from configurations.getByName("aerprom")
    into externalLibraries.baseDir
    doLast {
        project.configurations.getByName("aerprom").getAllDependencies().each {
            // strip version number out of agent jar
            // rename "-${it.version}", ""
            versions.append("group: $it.group, name: $it.name, version: $it.version").append(LINE_BREAK)
        }
        // Add versions file with detailed version of each dependency
        def versionsFile = new File("${rootProject.projectDir}${File.separator}versions.txt")
        versionsFile.createNewFile()
        versionsFile.text = versions.toString()
    }
}
